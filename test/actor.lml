

module Actor: sig

  type t = {
      handler: ('a * 'b -> unit) ;
      state: 'a ;
      reader: 'b Fifo.in_channel ;
      free_state: ('a -> unit) ;
    }

end = struct

  let rec loop t = 
    let handler, st, r = split t in
    let r, msg = Fifo.read r in
    match msg with
    | None -> free(st) ; free(r)
    | Some msg -> 
	let st = handler st msg in 
	loop { handler, st, r }

  let make f st free_st ty =
    let r, w = Fifo.make ty in
    let t = {
      handler: f ;
      state: st ;
      reader: r ;
      free_state: free_st ;
    } in
    spawn loop t ;
    w

end
