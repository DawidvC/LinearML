

module ParallelSort: sig
end = struct

  let send_block workers n block = 
    n+1, match worker.(n) with
    | None -> Error
    | Some w -> send w (Sort block)

  let rec make_blocks bsize n bacc acc l = 
    if n = 0
    then make_blocks bsize bsize [] acc l
    else match l with
    | [] -> bacc :: acc
    | x :: rl


  let split workers n size bacc acc l = 
    if size = 0
    then 
      let promis = send_block workers n bacc in
      split workers (n+1) 10000 [] (promis :: acc) l
    else
      match l with
      | [] -> acc
      | x :: rl -> split

  let controller workers l = split workers 0 l

  let make n = 
    let workers = Array.init SortWoker.make n in
    Actor.make controller workers
end
