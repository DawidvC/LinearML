

module Test: sig

  type 'a t = 
    | Empty
    | Cons of 'a * 'a t

  val f: 'a t t -> int32

end = struct

  let f t =
    match t, t, t with
    | Empty, Empty, Empty -> 0
    | Empty, Cons _ _, Empty -> 1
    | Cons _ _, Cons _ _, Empty -> 2
    | Cons _ _, Empty, Empty -> 1

end

