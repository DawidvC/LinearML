

module Test3: sig
end = struct

  let handler self st msg = 
    match msg with
    | Init -> 
	let merger_array = .. reply in
	let finders = .. merger_array in
	finders
    | Find (x, res) -> send finder (Find (x, res))
    | Merge (x, y, res) -> 
	send finder1 (Find (x, self)) ;
	send finder2 (Find (x))
    

  let handler state msg = 
    match msg with
    | Merge (x,y) ->
	let r1 = send finder1 x in
	let r2 = send finder2 y in
	let merged = send merger (r1, r2) in
	state, merged

  let merger r1 r2 = 
    let l1 = wait r1 in
    let l2 = wait r2 in
    (), merge l1 l2
end
  
