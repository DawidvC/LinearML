
module UnitTestClosure = struct
  
  type env = {
      x: int
    }

  val free_env: env #-> unit
  let free_env env = free env

  val f: (env, IntBox.t) Couple.t #-> (env, IntBox.t) Couple.t
  let f cpl = 
    let env, y = Couple.break cpl in
    let y = env.x + IntBox.unbox y in
    let env = { env with x = y } in
    Couple.make env (IntBox.make y)

  val main: unit #-> unit
  let main x = 
    let env = { x = 0 } in
    let cls = Closure.make f free_env env in
    let cls, v = Closure.call cls (IntBox.make 1) in
    Closure.release cls ;
    Print.int (IntBox.unbox v)
end
